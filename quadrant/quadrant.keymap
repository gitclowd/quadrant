/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define FUNC_L 1

/ {


    macros {
        ZMK_MACRO(bt_clr, bindings = <&bt BT_CLR_ALL>;)
        ZMK_MACRO(bt_nxt, bindings = <&bt BT_NXT>;)
    };
	
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp KP_NUM>, <&sys_reset>, <&bootloader>;
        };

        ht0: layer_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
		
        htht: hold_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
				
        ht1: hold_tap_numpad {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <3000>;
            flavor = "tap-preferred";
            bindings =
                <&bt_clr>,
                <&kp>;
        };
		
		ht2: out_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <3000>;
            flavor = "tap-preferred";
            bindings =
                <&out>,
                <&kp>;
        };
		
		ht3: bootloader_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <3000>;
            flavor = "tap-preferred";
            bindings =
                <&bootloader>,
                <&kp>;
        };
		
	
    };
	
    keymap {
        compatible = "zmk,keymap";
		
        default_layer {
            bindings = <

&kp ESC    &kp N1    &kp N2     &kp N3     &kp N4     &kp N5     &kp N6              &kp N7     &kp N8     &kp N9     &kp N0     &kp MINUS  &kp EQUAL  &kp BKSP
&kp F4     &kp GRAVE &kp Q      &kp W      &kp E      &kp R      &kp T        		 &kp Y      &kp U      &kp I      &kp O      &kp P      &kp LBKT   &kp RBKT
&kp F8     &kp TAB   &kp A      &kp S      &kp D      &kp F      &kp G        		 &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp APOS   &kp ENTER
&kp F5     &kp LSHFT &kp Z      &kp X      &kp C      &kp V      &kp B     		     &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp BSLH   &kp INS
&kp LCTRL  &ht1 0 F1 &kp F2     &kp F3     &kp LALT   &kp SPACE  &kp LGUI            &kp LGUI   &kp SPACE  &kp PGUP   &kp PGDN   &kp HOME   &kp END    &mo FUNC_L


&td0          &kp KP_SLASH &kp KP_ASTERISK &htht BKSP KP_MINUS
&kp KP_N7     &kp KP_N8    &kp KP_N9       &ht0 FUNC_L KP_PLUS
&kp KP_N4     &kp KP_N5    &kp KP_N6         
&kp KP_N1     &kp KP_N2    &kp KP_N3       &kp  ENTER
&kp KP_N0     &kp KP_DOT     


&kp A     &kp B     &kp C     &kp D     &kp E

            >;
        };

        function_layer {
            bindings = < 

&bootloader &kp F1       &kp F2       &kp F3       &kp F4     &kp F5     &kp F6            &kp F7         &kp F8     &kp F9     &kp F10    &kp F11    &kp F12    &kp DEL  
&trans      &trans       &trans       &kp UP       &trans     &trans     &trans            &trans         &trans     &trans     &trans     &trans     &trans     &trans    
&trans      &trans       &kp LEFT     &kp DOWN     &kp RIGHT  &trans     &trans            &trans         &trans     &trans     &trans     &trans     &trans     &trans  
&trans      &trans       &trans       &trans       &trans     &trans     &trans            &trans         &trans     &trans     &trans     &trans     &trans     &bt BT_CLR_ALL 
&trans      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans     &trans     &trans            &trans         &trans     &trans     &trans     &trans     &trans     &trans   


&trans        &trans       &trans          &bt BT_CLR_ALL       
&kp K_PREV    &kp K_PP     &kp K_NEXT      &trans       
&kp D         &kp E        &kp F     
&kp G         &kp H        &kp I           &trans       
&trans        &trans


&trans		&trans		&trans		&trans		&trans		

            >;
        };
	};

};
